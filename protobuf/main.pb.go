// Code generated by protoc-gen-go.
// source: main.proto
// DO NOT EDIT!

/*
Package babl is a generated protocol buffer package.

It is generated from these files:
	main.proto

It has these top-level messages:
	Empty
	InfoResponse
*/
package babl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type InfoResponse struct {
	Version      string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	TotalStorage uint32 `protobuf:"varint,10,opt,name=total_storage,json=totalStorage" json:"total_storage,omitempty"`
	FreeStorage  uint32 `protobuf:"varint,11,opt,name=free_storage,json=freeStorage" json:"free_storage,omitempty"`
}

func (m *InfoResponse) Reset()                    { *m = InfoResponse{} }
func (m *InfoResponse) String() string            { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()               {}
func (*InfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Empty)(nil), "babl.Empty")
	proto.RegisterType((*InfoResponse)(nil), "babl.InfoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Storage service

type StorageClient interface {
	Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*InfoResponse, error)
}

type storageClient struct {
	cc *grpc.ClientConn
}

func NewStorageClient(cc *grpc.ClientConn) StorageClient {
	return &storageClient{cc}
}

func (c *storageClient) Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := grpc.Invoke(ctx, "/babl.Storage/Info", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Storage service

type StorageServer interface {
	Info(context.Context, *Empty) (*InfoResponse, error)
}

func RegisterStorageServer(s *grpc.Server, srv StorageServer) {
	s.RegisterService(&_Storage_serviceDesc, srv)
}

func _Storage_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/babl.Storage/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Info(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Storage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "babl.Storage",
	HandlerType: (*StorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Info",
			Handler:    _Storage_Info_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("main.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0x4d, 0xcc, 0xcc,
	0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x49, 0x4a, 0x4c, 0xca, 0x51, 0x62, 0xe7, 0x62,
	0x75, 0xcd, 0x2d, 0x28, 0xa9, 0x54, 0x2a, 0xe0, 0xe2, 0xf1, 0xcc, 0x4b, 0xcb, 0x0f, 0x4a, 0x2d,
	0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x92, 0xe0, 0x62, 0x2f, 0x4b, 0x2d, 0x2a, 0xce, 0xcc, 0xcf,
	0x93, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x71, 0x85, 0x94, 0xb9, 0x78, 0x4b, 0xf2, 0x4b,
	0x12, 0x73, 0xe2, 0x8b, 0x4b, 0xf2, 0x8b, 0x12, 0xd3, 0x53, 0x25, 0xb8, 0x14, 0x18, 0x35, 0x78,
	0x83, 0x78, 0xc0, 0x82, 0xc1, 0x10, 0x31, 0x21, 0x45, 0x2e, 0x9e, 0xb4, 0xa2, 0xd4, 0x54, 0xb8,
	0x1a, 0x6e, 0xb0, 0x1a, 0x6e, 0x90, 0x18, 0x54, 0x89, 0x91, 0x09, 0x17, 0x3b, 0x4c, 0xb5, 0x26,
	0x17, 0x0b, 0xc8, 0x72, 0x21, 0x6e, 0x3d, 0x90, 0xa3, 0xf4, 0xc0, 0x2e, 0x92, 0x12, 0x82, 0x70,
	0x90, 0x5d, 0xa5, 0xc4, 0x90, 0xc4, 0x06, 0x76, 0xbd, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x46,
	0xea, 0xb4, 0x1a, 0xcb, 0x00, 0x00, 0x00,
}
